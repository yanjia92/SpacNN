// simple dynamic power management system

ctmc

const int q_max = 20; // maximum queue size

const double rate_arrive = 1 / 0.72;

module SQ // service queue module
    q: [0, q_max] init 0;
    
    [request] true -> rate_arrive : (q'=min(q+1, q_max));

    [serve] q>1 -> (q'=q - 1);

    [serve_last] q==1 -> q'=q - 1;

endmodule 

// service provider module
const double rate_serve = 1/0.008;

module SP
    sp : [0, 2] init 1; // 0=sleep, 1=idle, 2=busy

    // when a request arrive and at idle state, idle -> busy
    [request] sp==1 -> (sp'=2);

    // if queue is not at idle state and when a request comes, its state doesn't change
    [request] sp != 1 -> (sp'=sp);

    //
    [serve] sp == 2 -> rate_serve : (sp'=2);
    
    [serve_last] sp == 2 -> rate_serve : (sp'=1);

endmodule

const int q_trigger; // above which sleep2idle is sent

module PM
    [sleep2idle] q >= q_trigger -> true; // when queue's size >= q_trigger
    
    [idle2sleep] q == 0 -> true;

endmodule

label failure = q >= 6;
